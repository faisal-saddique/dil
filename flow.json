[
    {
        "id": "59a0bad7073bcd64",
        "type": "tab",
        "label": "Flow 5",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "df3445511736d041",
        "type": "group",
        "z": "59a0bad7073bcd64",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "99752a5e8390a17d",
            "e5a333081d7ee0bf",
            "14ac5712b2a88231",
            "17573b9cf5a85577",
            "168cd5bbfdbe0223",
            "924d72bc2c4d5378"
        ],
        "x": 674,
        "y": 39,
        "w": 632,
        "h": 122
    },
    {
        "id": "0f12f13362f1e6a8",
        "type": "group",
        "z": "59a0bad7073bcd64",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "078f291cd7c79276",
            "fb6ce91e8d83d26b",
            "0507fd99b41c1fd1",
            "233f2b7de80e238c",
            "f5243a9700c2a50b",
            "377fcc23db7c3cd3",
            "cfb160fe261c9ee1",
            "6fadec28fb15d12c",
            "4d0ef71d5b4ac7d6",
            "18077c2ed8a05f76"
        ],
        "x": 374,
        "y": 399,
        "w": 1012,
        "h": 262
    },
    {
        "id": "18041edb02559106",
        "type": "group",
        "z": "59a0bad7073bcd64",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4a45499929274a07",
            "d6e2ce968039b14d",
            "83e1d0722edfae02",
            "b5bcc99e7a0a500f",
            "b9f80c7fbfc50ff3"
        ],
        "x": 374,
        "y": 699,
        "w": 1032,
        "h": 162
    },
    {
        "id": "92ffe54822e9b2be",
        "type": "group",
        "z": "59a0bad7073bcd64",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "eedebb0c7203774e",
            "f2b19b4200eaa235",
            "69decd9c3a0fe0f8",
            "7efcde0fa99aad27",
            "eb282b9f801f4f0c",
            "05c51c0b26b33bdc",
            "c35925cbea4de0e1",
            "25ac4e6648b3254d",
            "433ee6ae49a26ad0",
            "cefcfde6022fa753",
            "50871911fdc8f4e7",
            "9dd1c1159802e8d1",
            "a9a2d0a41abdf618",
            "4fc41d79b5a49cdd",
            "79d7b79558c35a18",
            "53f7637aabcda429",
            "f9773056d9c65f14",
            "1fed3fbb55b9172b",
            "909e66ed049c159f",
            "ccfd1144f40367ca",
            "5b87f6349d223f2b",
            "d0e98a42b017c3a2",
            "4761fa88b71ee202",
            "2ecdb6ea1e8b891f",
            "087e0aa69338d49b",
            "6b3e48528cb3af3a",
            "9a6c4a4521b2c962",
            "b443af28645258d1",
            "fb37d21e92d6805b",
            "bbb641608562f141",
            "69e65a1fcfe414e1",
            "518c79a1ef93343e",
            "355107aeb4f21e9c",
            "d375b594ca158797",
            "9b63236d8e638ef7",
            "245feaf44419fc34"
        ],
        "x": 374,
        "y": 899,
        "w": 1072,
        "h": 642
    },
    {
        "id": "0385c4a0f3d45ee3",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "27c07a765d141ace",
        "type": "mqtt-broker",
        "name": "",
        "broker": "https://test.mosquitto.org/",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2a11c41f676a1a39",
        "type": "ui_tab",
        "name": "Smart Plug",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b8d2d09c504dbf58",
        "type": "ui_group",
        "name": "Power",
        "tab": "2a11c41f676a1a39",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": true,
        "className": ""
    },
    {
        "id": "4ff12dc7894c7df2",
        "type": "ui_group",
        "name": "Threshold",
        "tab": "2a11c41f676a1a39",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1c6f72bb4883d1d6",
        "type": "ui_group",
        "name": "Main Switch",
        "tab": "2a11c41f676a1a39",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": true,
        "className": ""
    },
    {
        "id": "4529a262d878ff59",
        "type": "ui_group",
        "name": "Schedule",
        "tab": "2a11c41f676a1a39",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": true,
        "className": ""
    },
    {
        "id": "7c188941542118c2",
        "type": "ui_group",
        "name": "Repeat",
        "tab": "2a11c41f676a1a39",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "415c907383f1fc2e",
        "type": "ui_spacer",
        "z": "59a0bad7073bcd64",
        "name": "spacer",
        "group": "4529a262d878ff59",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "427e1b8dc0db50de",
        "type": "ui_spacer",
        "z": "59a0bad7073bcd64",
        "name": "spacer",
        "group": "7c188941542118c2",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "7032e523f530d5b1",
        "type": "ui_spacer",
        "z": "59a0bad7073bcd64",
        "name": "spacer",
        "group": "7c188941542118c2",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "9e442f0382ac9eda",
        "type": "ui_spacer",
        "z": "59a0bad7073bcd64",
        "name": "spacer",
        "group": "7c188941542118c2",
        "order": 5,
        "width": 6,
        "height": 1
    },
    {
        "id": "beb7112486b2807b",
        "type": "ui_spacer",
        "z": "59a0bad7073bcd64",
        "name": "spacer",
        "group": "7c188941542118c2",
        "order": 8,
        "width": 6,
        "height": 1
    },
    {
        "id": "078f291cd7c79276",
        "type": "ui_switch",
        "z": "59a0bad7073bcd64",
        "g": "0f12f13362f1e6a8",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "1c6f72bb4883d1d6",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1050,
        "y": 580,
        "wires": [
            [
                "cfb160fe261c9ee1",
                "233f2b7de80e238c"
            ]
        ]
    },
    {
        "id": "fb6ce91e8d83d26b",
        "type": "ui_chart",
        "z": "59a0bad7073bcd64",
        "g": "0f12f13362f1e6a8",
        "name": "",
        "group": "b8d2d09c504dbf58",
        "order": 1,
        "width": 6,
        "height": 4,
        "label": "Power",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "cubic",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 670,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "0507fd99b41c1fd1",
        "type": "ui_gauge",
        "z": "59a0bad7073bcd64",
        "g": "0f12f13362f1e6a8",
        "name": "",
        "group": "b8d2d09c504dbf58",
        "order": 2,
        "width": 6,
        "height": 3,
        "gtype": "gage",
        "title": "Power",
        "label": "Watts",
        "format": "{{value}}",
        "min": 0,
        "max": "1200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "500",
        "seg2": "850",
        "diff": false,
        "className": "",
        "x": 670,
        "y": 440,
        "wires": []
    },
    {
        "id": "eedebb0c7203774e",
        "type": "ui_switch",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "label": "Scheduled ON",
        "tooltip": "",
        "group": "4529a262d878ff59",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "scheduleOnFlag",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1040,
        "y": 940,
        "wires": [
            [
                "9dd1c1159802e8d1"
            ]
        ]
    },
    {
        "id": "f2b19b4200eaa235",
        "type": "ui_switch",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "label": "Scheduled OFF",
        "tooltip": "",
        "group": "4529a262d878ff59",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "scheduleOffFlag",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1040,
        "y": 1100,
        "wires": [
            [
                "9dd1c1159802e8d1"
            ]
        ]
    },
    {
        "id": "69decd9c3a0fe0f8",
        "type": "ui_date_picker",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "label": "date",
        "group": "4529a262d878ff59",
        "order": 2,
        "width": 6,
        "height": 2,
        "passthru": true,
        "topic": "scheduleOnDateInput",
        "topicType": "str",
        "className": "",
        "x": 1070,
        "y": 1000,
        "wires": [
            [
                "9dd1c1159802e8d1"
            ]
        ]
    },
    {
        "id": "7efcde0fa99aad27",
        "type": "ui_switch",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "label": "Repeat",
        "tooltip": "",
        "group": "7c188941542118c2",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "repeatOnFlag",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1060,
        "y": 1280,
        "wires": [
            [
                "9dd1c1159802e8d1"
            ]
        ]
    },
    {
        "id": "eb282b9f801f4f0c",
        "type": "ui_numeric",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "label": "Occurrings",
        "tooltip": "",
        "group": "7c188941542118c2",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "repeatOccuringsInput",
        "topicType": "str",
        "format": "{{value}}",
        "min": "1",
        "max": "999",
        "step": 1,
        "className": "",
        "x": 1050,
        "y": 1340,
        "wires": [
            [
                "9dd1c1159802e8d1",
                "69e65a1fcfe414e1",
                "9b63236d8e638ef7"
            ]
        ]
    },
    {
        "id": "05c51c0b26b33bdc",
        "type": "ui_date_picker",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "label": "Start Date",
        "group": "7c188941542118c2",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "repeatOccuringsStartDate",
        "topicType": "str",
        "className": "",
        "x": 1060,
        "y": 1400,
        "wires": [
            [
                "9dd1c1159802e8d1"
            ]
        ]
    },
    {
        "id": "c35925cbea4de0e1",
        "type": "ui_numeric",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "label": "Running Time (Minutes)",
        "tooltip": "",
        "group": "7c188941542118c2",
        "order": 9,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "repeatOccuringsRunTime",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "999",
        "step": 1,
        "className": "",
        "x": 1010,
        "y": 1500,
        "wires": [
            [
                "9dd1c1159802e8d1"
            ]
        ]
    },
    {
        "id": "99752a5e8390a17d",
        "type": "ui_numeric",
        "z": "59a0bad7073bcd64",
        "g": "df3445511736d041",
        "name": "",
        "label": "Warning Level",
        "tooltip": "",
        "group": "4ff12dc7894c7df2",
        "order": 1,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "Warning",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "999",
        "step": 1,
        "className": " ",
        "x": 940,
        "y": 80,
        "wires": [
            [
                "14ac5712b2a88231"
            ]
        ]
    },
    {
        "id": "e5a333081d7ee0bf",
        "type": "ui_numeric",
        "z": "59a0bad7073bcd64",
        "g": "df3445511736d041",
        "name": "",
        "label": "Cutoff Level",
        "tooltip": "",
        "group": "4ff12dc7894c7df2",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "999",
        "step": 1,
        "className": "",
        "x": 930,
        "y": 120,
        "wires": [
            [
                "17573b9cf5a85577"
            ]
        ]
    },
    {
        "id": "25ac4e6648b3254d",
        "type": "ui_date_picker",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "label": "date",
        "group": "4529a262d878ff59",
        "order": 6,
        "width": 6,
        "height": 2,
        "passthru": true,
        "topic": "scheduleOffDateInput",
        "topicType": "str",
        "className": "",
        "x": 1070,
        "y": 1160,
        "wires": [
            [
                "9dd1c1159802e8d1"
            ]
        ]
    },
    {
        "id": "433ee6ae49a26ad0",
        "type": "ui_text_input",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "7c188941542118c2",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "time",
        "delay": "100",
        "topic": "repeatOccuringsStartTime",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1060,
        "y": 1440,
        "wires": [
            [
                "9dd1c1159802e8d1"
            ]
        ]
    },
    {
        "id": "233f2b7de80e238c",
        "type": "mqtt out",
        "z": "59a0bad7073bcd64",
        "g": "0f12f13362f1e6a8",
        "name": "",
        "topic": "Smart_Plug-Relay",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "27c07a765d141ace",
        "x": 1270,
        "y": 580,
        "wires": []
    },
    {
        "id": "f5243a9700c2a50b",
        "type": "mqtt in",
        "z": "59a0bad7073bcd64",
        "g": "0f12f13362f1e6a8",
        "name": "",
        "topic": "Power",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "27c07a765d141ace",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 500,
        "wires": [
            [
                "0507fd99b41c1fd1",
                "fb6ce91e8d83d26b",
                "6fadec28fb15d12c",
                "18077c2ed8a05f76"
            ]
        ]
    },
    {
        "id": "377fcc23db7c3cd3",
        "type": "ui_toast",
        "z": "59a0bad7073bcd64",
        "g": "0f12f13362f1e6a8",
        "position": "dialog",
        "displayTime": "2",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1070,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "cfb160fe261c9ee1",
        "type": "function",
        "z": "59a0bad7073bcd64",
        "g": "0f12f13362f1e6a8",
        "name": "Set Switch Status",
        "func": "if (msg.payload==1) global.set(\"switchStatus\",true);\nelse global.set(\"switchStatus\",false);",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 620,
        "wires": []
    },
    {
        "id": "6fadec28fb15d12c",
        "type": "function",
        "z": "59a0bad7073bcd64",
        "g": "0f12f13362f1e6a8",
        "name": "Check if the Power is below the threshold",
        "func": "// Assuming the threshold is defined as a constant (you can adjust it)\nconst warningLevel = global.get(\"warningLevel\");\nconst cutOffLevel = global.get(\"cutOffLevel\");\n\n// Assuming the power value is in msg.payload\nconst powerValue = msg.payload;\n\n// Check if the power value is below the threshold\nif (powerValue < warningLevel) {\n    // Power is below the warning level, no action needed\n    return [null, null];\n} else {\n    var msg1 = { payload: null };\n    var msg2 = { payload: 0 };\n\n    // Check if power exceeds warning level\n    if (powerValue >= warningLevel && powerValue < cutOffLevel) {\n\n        // Power is above or equal to warning level, check if the warning has been sent\n        if (!(global.get(\"warningSent\") || false)) {\n            // Warning has not been sent, send the warning message and update the flag\n            msg1.payload = \"WARNING: Power is above the warning level.\";\n            global.set(\"warningSent\", true);\n            return [msg1, null];\n        } else {\n            // Warning has already been sent, send null\n            return [null, null];\n        }\n    } else if (powerValue >= cutOffLevel) {\n        // Power is above or equal to cutoff level, output a warning message and turn off the switch\n        msg1.payload = \"ALERT: Power is above the cutoff level. Switch turned OFF.\";\n        if (global.get(\"switchStatus\")) \n        {\n            global.set(\"warningSent\", false);\n            return [msg1, msg2]; \n        }\n        else return [null, null];\n    } else {\n        // Power is between warning level and cutoff level, no action needed\n        return [null, null];\n    }\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 560,
        "wires": [
            [
                "377fcc23db7c3cd3"
            ],
            [
                "078f291cd7c79276"
            ]
        ]
    },
    {
        "id": "14ac5712b2a88231",
        "type": "change",
        "z": "59a0bad7073bcd64",
        "g": "df3445511736d041",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "warningLevel",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "17573b9cf5a85577",
        "type": "change",
        "z": "59a0bad7073bcd64",
        "g": "df3445511736d041",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cutOffLevel",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "cefcfde6022fa753",
        "type": "ui_text_input",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "4529a262d878ff59",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "time",
        "delay": "100",
        "topic": "scheduleOnTimeInput",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1060,
        "y": 1040,
        "wires": [
            [
                "9dd1c1159802e8d1"
            ]
        ]
    },
    {
        "id": "50871911fdc8f4e7",
        "type": "ui_text_input",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "4529a262d878ff59",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "time",
        "delay": "100",
        "topic": "scheduleOffTimeInput",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 1060,
        "y": 1200,
        "wires": [
            [
                "9dd1c1159802e8d1"
            ]
        ]
    },
    {
        "id": "9dd1c1159802e8d1",
        "type": "function",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "Set Global Variables",
        "func": "// Extract topic from msg\nvar topic = msg.topic;\n\n// Check topic and set global variable accordingly\nswitch (topic) {\n    case \"scheduleOnFlag\":\n        global.set(topic, msg.payload);\n        // Reset scheduleOnEventTriggered if scheduleOnFlag is changed\n        global.set(\"scheduleOnEventTriggered\", false);\n        // node.warn(\"Set global variable for \" + topic + \": \" + msg.payload);\n        break;\n    case \"scheduleOnDateInput\":\n        global.set(topic, msg.payload);\n        // node.warn(\"Set global variable for \" + topic + \": \" + msg.payload);\n        break;\n    case \"scheduleOnTimeInput\":\n        global.set(topic, msg.payload);\n        // node.warn(\"Set global variable for \" + topic + \": \" + msg.payload);\n        break;\n    case \"scheduleOffFlag\":\n        global.set(topic, msg.payload);\n        // Reset scheduleOffEventTriggered if scheduleOffFlag is changed\n        global.set(\"scheduleOffEventTriggered\", false);\n        // node.warn(\"Set global variable for \" + topic + \": \" + msg.payload);\n        break;\n    case \"scheduleOffDateInput\":\n        global.set(topic, msg.payload);\n        // node.warn(\"Set global variable for \" + topic + \": \" + msg.payload);\n        break;\n    case \"scheduleOffTimeInput\":\n        global.set(topic, msg.payload);\n        // node.warn(\"Set global variable for \" + topic + \": \" + msg.payload);\n        break;\n    case \"repeatOnFlag\":\n        global.set(topic, msg.payload);\n        // node.warn(\"Set global variable for \" + topic + \": \" + msg.payload);\n        break;\n    case \"repeatOccuringsInput\":\n        global.set(topic, msg.payload);\n        node.warn(\"Set global variable for \" + topic + \": \" + msg.payload);\n        break;\n    case \"repeatOccuringsStartDate\":\n        global.set(topic, msg.payload);\n        // node.warn(\"Set global variable for \" + topic + \": \" + msg.payload);\n        break;\n    case \"repeatOccuringsStartTime\":\n        global.set(topic, msg.payload);\n        // node.warn(\"Set global variable for \" + topic + \": \" + msg.payload);\n        break;\n    case \"repeatOccuringsRunTime\":\n        global.set(topic, msg.payload);\n        node.warn(\"Set global variable for \" + topic + \": \" + msg.payload);\n        break;\n\n    // Handle unknown topics if needed\n    default:\n        node.warn(\"Unknown topic: \" + topic);\n        break;\n}\n\n// Return the original msg for further processing in the flow\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "a9a2d0a41abdf618",
        "type": "inject",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 490,
        "y": 1020,
        "wires": [
            [
                "bbb641608562f141"
            ]
        ]
    },
    {
        "id": "4fc41d79b5a49cdd",
        "type": "inject",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 710,
        "y": 1060,
        "wires": [
            [
                "d0e98a42b017c3a2"
            ]
        ]
    },
    {
        "id": "79d7b79558c35a18",
        "type": "link out",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "53f7637aabcda429",
            "f9773056d9c65f14",
            "1fed3fbb55b9172b",
            "909e66ed049c159f",
            "ccfd1144f40367ca",
            "5b87f6349d223f2b"
        ],
        "x": 855,
        "y": 1020,
        "wires": []
    },
    {
        "id": "53f7637aabcda429",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link in 1",
        "links": [
            "79d7b79558c35a18"
        ],
        "x": 965,
        "y": 1040,
        "wires": [
            [
                "cefcfde6022fa753"
            ]
        ]
    },
    {
        "id": "f9773056d9c65f14",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link in 2",
        "links": [
            "79d7b79558c35a18"
        ],
        "x": 985,
        "y": 1000,
        "wires": [
            [
                "69decd9c3a0fe0f8"
            ]
        ]
    },
    {
        "id": "1fed3fbb55b9172b",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link in 3",
        "links": [
            "79d7b79558c35a18"
        ],
        "x": 985,
        "y": 1160,
        "wires": [
            [
                "25ac4e6648b3254d"
            ]
        ]
    },
    {
        "id": "909e66ed049c159f",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link in 4",
        "links": [
            "79d7b79558c35a18"
        ],
        "x": 965,
        "y": 1200,
        "wires": [
            [
                "50871911fdc8f4e7"
            ]
        ]
    },
    {
        "id": "ccfd1144f40367ca",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link in 5",
        "links": [
            "79d7b79558c35a18"
        ],
        "x": 965,
        "y": 1440,
        "wires": [
            [
                "433ee6ae49a26ad0"
            ]
        ]
    },
    {
        "id": "5b87f6349d223f2b",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link in 6",
        "links": [
            "79d7b79558c35a18"
        ],
        "x": 965,
        "y": 1400,
        "wires": [
            [
                "05c51c0b26b33bdc"
            ]
        ]
    },
    {
        "id": "d0e98a42b017c3a2",
        "type": "link out",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "454a3f3d3818b631",
            "4761fa88b71ee202"
        ],
        "x": 795,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4761fa88b71ee202",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link in 8",
        "links": [
            "d0e98a42b017c3a2"
        ],
        "x": 865,
        "y": 1500,
        "wires": [
            [
                "c35925cbea4de0e1"
            ]
        ]
    },
    {
        "id": "4a45499929274a07",
        "type": "function",
        "z": "59a0bad7073bcd64",
        "g": "18041edb02559106",
        "name": "Scheduling Brain",
        "func": "// Get current timestamp\nvar currentTime = msg.payload;\n\n// Function to convert timestamp to human-readable date and time\nfunction timestampToDateTime(timestamp) {\n    var date = new Date(timestamp);\n    return date.toLocaleString();\n}\n\n// Function to add days to a timestamp\nfunction addDays(timestamp, days) {\n    return timestamp + days * 24 * 60 * 60 * 1000; // Convert days to milliseconds\n}\n\n// Check if Schedule Switch On event has already been triggered\nvar scheduleOnEventTriggered = global.get(\"scheduleOnEventTriggered\") || false;\n\n// Schedule Switch On\nif (global.get(\"scheduleOnFlag\") && !scheduleOnEventTriggered) {\n    var scheduleOnTime = global.get(\"scheduleOnTimeInput\");\n    var scheduleOnDate = global.get(\"scheduleOnDateInput\");\n\n    // Check if the scheduled switch-on time and date have arrived\n    if (currentTime >= scheduleOnDate && currentTime >= scheduleOnTime) {\n        node.warn(\"Scheduled Switch On time reached: \" + timestampToDateTime(currentTime));\n        msg.payload = 1; // Output 1 to indicate switch-on\n        global.set(\"scheduleOnEventTriggered\", true); // Set the flag to indicate the event has been triggered\n        return msg;\n    }\n}\n\n// Check if Schedule Switch Off event has already been triggered\nvar scheduleOffEventTriggered = global.get(\"scheduleOffEventTriggered\") || false;\n\n// Schedule Switch Off\nif (global.get(\"scheduleOffFlag\") && !scheduleOffEventTriggered) {\n    var scheduleOffTime = global.get(\"scheduleOffTimeInput\");\n    var scheduleOffDate = global.get(\"scheduleOffDateInput\");\n\n    // Check if the scheduled switch-off time and date have arrived\n    if (currentTime >= scheduleOffDate && currentTime >= scheduleOffTime) {\n        node.warn(\"Scheduled Switch Off time reached: \" + timestampToDateTime(currentTime));\n        msg.payload = 0; // Output 0 to indicate switch-off\n        global.set(\"scheduleOffEventTriggered\", true); // Set the flag to indicate the event has been triggered\n        return msg;\n    }\n}\n\nvar repeatSwitchOnFlag = global.get(\"repeatSwitchOnFlag\");\nvar repeatSwitchOffFlag = global.get(\"repeatSwitchOffFlag\");\n\n// Repeat Feature\nif (global.get(\"repeatOnFlag\")) {\n    var repeatStartDate = global.get(\"repeatOccuringsStartDate\");\n    var repeatStartTime = global.get(\"repeatOccuringsStartTime\");\n    var repeatRunTime = global.get(\"repeatOccuringsRunTime\");\n    var repeatOccurings = global.get(\"repeatOccuringsInput\");\n\n    // Check if the repeat start date and time have arrived\n    if (currentTime >= repeatStartDate && currentTime >= repeatStartTime) {\n        // Calculate time difference in minutes\n        var timeDiffMinutes = Math.floor((currentTime - repeatStartTime) / (60 * 1000));\n\n        // node.warn(`The timeDiffMinutes is: ${timeDiffMinutes}`);\n        node.warn(`${timeDiffMinutes} > 0 && ${timeDiffMinutes} <= ${repeatRunTime} && ${repeatOccurings} > 0 && !${repeatSwitchOnFlag}`)\n        // Check if the current time is within the repeat schedule and the number of occurrences is within the limit\n        if (timeDiffMinutes >= 0 && timeDiffMinutes < repeatRunTime && repeatOccurings > 0 && !repeatSwitchOnFlag) {\n            global.set(\"repeatRunTimeGoingOnFlag\", true);\n            node.warn(\"insdie the repeat loop, condition is true\")\n            node.warn(\"Repeat On Feature: \" + timestampToDateTime(currentTime));\n            global.set(\"repeatSwitchOnFlag\", true);\n            msg.payload = 1; // Output 1 to indicate switch-on\n            return msg;\n        }\n        else if (timeDiffMinutes >= 0 && timeDiffMinutes >= repeatRunTime && repeatOccurings > 0 && !repeatSwitchOffFlag) {\n            node.warn(\"Repeat Off Feature: \" + timestampToDateTime(currentTime));\n            global.set(\"repeatRunTimeGoingOnFlag\", false);\n            global.set(\"aDayaddedToTheRepeatOccuringsStartDate\", false);\n            global.set(\"repeatSwitchOffFlag\",true);\n            msg.payload = 0;\n            return msg; // Output 0 to indicate switch-off\n        }\n\n        if (!global.get(\"repeatRunTimeGoingOnFlag\") && !(global.get(\"aDayaddedToTheRepeatOccuringsStartDate\") || false)) {\n            // Check if the number of occurrences is within the limit\n            if (repeatOccurings <= 0) {\n                // No more occurrences, reset repeatOccuringsStartDate to end the schedule\n                global.set(\"repeatOccuringsStartDate\", 0);\n                return null;\n            } else {\n                // Calculate the timestamp for the next occurrence by adding the repeatRunTime to the repeatStartDate\n                var nextOccurrenceTimestamp = addDays(repeatStartDate, 1);\n\n                // Update repeatOccuringsStartDate for the next occurrence\n                global.set(\"repeatOccuringsStartDate\", nextOccurrenceTimestamp);\n\n                // Decrement the remaining occurrences\n                global.set(\"repeatOccuringsInput\", repeatOccurings - 1);\n                global.set(\"aDayaddedToTheRepeatOccuringsStartDate\", true);\n                // Log the next occurrence\n                node.warn(\"Next Repeat Feature Occurrence: \" + timestampToDateTime(nextOccurrenceTimestamp));\n            }\n        }\n    }\n}\n\n// No scheduled event reached\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 780,
        "wires": [
            [
                "83e1d0722edfae02",
                "b5bcc99e7a0a500f"
            ]
        ]
    },
    {
        "id": "d6e2ce968039b14d",
        "type": "inject",
        "z": "59a0bad7073bcd64",
        "g": "18041edb02559106",
        "name": "Trigger the brain each second",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 550,
        "y": 780,
        "wires": [
            [
                "b9f80c7fbfc50ff3"
            ]
        ]
    },
    {
        "id": "83e1d0722edfae02",
        "type": "debug",
        "z": "59a0bad7073bcd64",
        "g": "18041edb02559106",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 820,
        "wires": []
    },
    {
        "id": "2ecdb6ea1e8b891f",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link in 9",
        "links": [
            "355107aeb4f21e9c"
        ],
        "x": 945,
        "y": 1340,
        "wires": [
            [
                "eb282b9f801f4f0c"
            ]
        ]
    },
    {
        "id": "b5bcc99e7a0a500f",
        "type": "link out",
        "z": "59a0bad7073bcd64",
        "g": "18041edb02559106",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "4d0ef71d5b4ac7d6"
        ],
        "x": 1255,
        "y": 740,
        "wires": []
    },
    {
        "id": "4d0ef71d5b4ac7d6",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "0f12f13362f1e6a8",
        "name": "link in 10",
        "links": [
            "b5bcc99e7a0a500f"
        ],
        "x": 945,
        "y": 600,
        "wires": [
            [
                "078f291cd7c79276"
            ]
        ]
    },
    {
        "id": "087e0aa69338d49b",
        "type": "inject",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 710,
        "y": 980,
        "wires": [
            [
                "6b3e48528cb3af3a"
            ]
        ]
    },
    {
        "id": "6b3e48528cb3af3a",
        "type": "link out",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "9a6c4a4521b2c962",
            "b443af28645258d1",
            "fb37d21e92d6805b"
        ],
        "x": 795,
        "y": 980,
        "wires": []
    },
    {
        "id": "9a6c4a4521b2c962",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link in 11",
        "links": [
            "6b3e48528cb3af3a"
        ],
        "x": 925,
        "y": 940,
        "wires": [
            [
                "eedebb0c7203774e"
            ]
        ]
    },
    {
        "id": "b443af28645258d1",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link in 12",
        "links": [
            "6b3e48528cb3af3a"
        ],
        "x": 925,
        "y": 1100,
        "wires": [
            [
                "f2b19b4200eaa235"
            ]
        ]
    },
    {
        "id": "fb37d21e92d6805b",
        "type": "link in",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link in 13",
        "links": [
            "6b3e48528cb3af3a"
        ],
        "x": 965,
        "y": 1280,
        "wires": [
            [
                "7efcde0fa99aad27"
            ]
        ]
    },
    {
        "id": "bbb641608562f141",
        "type": "function",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "Add Local Timezone offset ",
        "func": "// Get the current UTC timestamp\nvar utcTimestamp = new Date().toISOString();\n\n// Get the local timezone dynamically\nvar localTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n// Convert UTC timestamp to local timezone\nvar localTimestamp = new Date(utcTimestamp);\n\n// Get the UTC offset in minutes\nvar utcOffsetMinutes = localTimestamp.getTimezoneOffset();\n\n// Adjust the timestamp by adding the UTC offset\nlocalTimestamp.setMinutes(localTimestamp.getMinutes() - utcOffsetMinutes);\n\n// Output the local timestamp\nmsg.payload = localTimestamp;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1020,
        "wires": [
            [
                "79d7b79558c35a18"
            ]
        ]
    },
    {
        "id": "b9f80c7fbfc50ff3",
        "type": "function",
        "z": "59a0bad7073bcd64",
        "g": "18041edb02559106",
        "name": "Add Local Timezone offset ",
        "func": "// Get the current UTC timestamp\nvar utcTimestamp = new Date().toISOString();\n\n// Get the local timezone dynamically\nvar localTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n// Convert UTC timestamp to local timezone\nvar localTimestamp = new Date(utcTimestamp);\n\n// Get the UTC offset in minutes\nvar utcOffsetMinutes = localTimestamp.getTimezoneOffset();\n\n// Adjust the timestamp by adding the UTC offset\nlocalTimestamp.setMinutes(localTimestamp.getMinutes() - utcOffsetMinutes);\n\n// Output the local timestamp\nmsg.payload = localTimestamp;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 780,
        "wires": [
            [
                "4a45499929274a07"
            ]
        ]
    },
    {
        "id": "18077c2ed8a05f76",
        "type": "debug",
        "z": "59a0bad7073bcd64",
        "g": "0f12f13362f1e6a8",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 520,
        "wires": []
    },
    {
        "id": "168cd5bbfdbe0223",
        "type": "inject",
        "z": "59a0bad7073bcd64",
        "g": "df3445511736d041",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "200",
        "payloadType": "num",
        "x": 770,
        "y": 80,
        "wires": [
            [
                "99752a5e8390a17d"
            ]
        ]
    },
    {
        "id": "924d72bc2c4d5378",
        "type": "inject",
        "z": "59a0bad7073bcd64",
        "g": "df3445511736d041",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "250",
        "payloadType": "num",
        "x": 770,
        "y": 120,
        "wires": [
            [
                "e5a333081d7ee0bf"
            ]
        ]
    },
    {
        "id": "8c4cd01ae7d72e7e",
        "type": "function",
        "z": "59a0bad7073bcd64",
        "name": "Set Repeat Switch Flags",
        "func": "global.set(\"repeatSwitchOnFlag\",false);\nglobal.set(\"repeatSwitchOffFlag\",false);\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 200,
        "wires": []
    },
    {
        "id": "98d2d7ca2393f87d",
        "type": "inject",
        "z": "59a0bad7073bcd64",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 930,
        "y": 200,
        "wires": [
            [
                "8c4cd01ae7d72e7e"
            ]
        ]
    },
    {
        "id": "69e65a1fcfe414e1",
        "type": "debug",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 1340,
        "wires": []
    },
    {
        "id": "518c79a1ef93343e",
        "type": "inject",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 710,
        "y": 1100,
        "wires": [
            [
                "355107aeb4f21e9c",
                "d375b594ca158797"
            ]
        ]
    },
    {
        "id": "355107aeb4f21e9c",
        "type": "link out",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "2ecdb6ea1e8b891f"
        ],
        "x": 795,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d375b594ca158797",
        "type": "debug",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1240,
        "wires": []
    },
    {
        "id": "9b63236d8e638ef7",
        "type": "debug",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 1440,
        "wires": []
    },
    {
        "id": "245feaf44419fc34",
        "type": "inject",
        "z": "59a0bad7073bcd64",
        "g": "92ffe54822e9b2be",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 800,
        "y": 1360,
        "wires": [
            []
        ]
    }
]